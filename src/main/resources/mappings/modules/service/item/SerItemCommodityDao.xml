<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.service.dao.item.SerItemCommodityDao">
    
	<sql id="serItemCommodityColumns">
		a.id AS "id",
		a.item_id AS "itemId",
		a.name AS "name",
		a.unit AS "unit",
		a.type AS "type",
		a.price AS "price",
		a.convert_hours AS "convertHours",
		a.min_purchase AS "minPurchase",
		a.start_per_num AS "startPerNum",
		a.capping_per_num AS "cappingPerNum",
		a.joint_goods_code AS "jointGoodsCode"
	</sql>
	
	<sql id="serItemCommodityJoins">
	</sql>
    
	<select id="get" resultType="SerItemCommodity">
		SELECT 
			<include refid="serItemCommodityColumns"/>
		FROM ser_item_info_goods a
		<include refid="serItemCommodityJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="SerItemCommodity">
		SELECT 
			<include refid="serItemCommodityColumns"/>
		FROM ser_item_info_goods a
		<include refid="serItemCommodityJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE concat('%',#{name},'%')
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="SerItemCommodity">
		SELECT 
			<include refid="serItemCommodityColumns"/>
		FROM ser_item_info_goods a
		<include refid="serItemCommodityJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO ser_item_info_goods(
			id,
			sort_id,
			item_id,
			name,
			unit,
			type,
			price,
			convert_hours,
			min_purchase,
			start_per_num,
			capping_per_num,
			joint_goods_code,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{sortId},
			#{itemId},
			#{name},
			#{unit},
			#{type},
			#{price},
			#{convertHours},
			#{minPurchase},
			#{startPerNum},
			#{cappingPerNum},
			#{jointGoodsCode},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE ser_item_info_goods SET 	
			<if test="name != null and name != ''">
				name = #{name},
			</if>
			<if test="unit != null and unit != ''">
				unit = #{unit},
			</if>
			<if test="type != null and type != ''">
				type = #{type},
			</if>
			<if test="price != null and price != ''">
				price = #{price},
			</if>
			<if test="convertHours != null and convertHours != ''">
				convert_hours = #{convertHours},
			</if>
			<if test="minPurchase != null and minPurchase != ''">
				min_purchase = #{minPurchase},
			</if>
			<if test="startPerNum != null and startPerNum != ''">
				start_per_num = #{startPerNum},
			</if>
			<if test="cappingPerNum != null and cappingPerNum != ''">
				capping_per_num = #{cappingPerNum},
			</if>
			<if test="jointGoodsCode != null and jointGoodsCode != ''">
				joint_goods_code = #{jointGoodsCode},
			</if>
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>

	<update id="updateJointGoodsCode">
		UPDATE ser_item_info_goods SET
		joint_goods_code = #{jointGoodsCode},
		update_by = #{updateBy.id},
		update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE ser_item_info_goods SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<select id="getSerItemCommodityByItem">
		SELECT id
		FROM ser_item_info_goods
		WHERE item_id = #{id}
		AND del_flag = #{DEL_FLAG_NORMAL}
	</select>
	<!--<update id="delSerItemCommodityPersons">-->
		<!--UPDATE ser_item_info_goods_persons SET-->
		<!--del_flag = #{DEL_FLAG_DELETE}-->
		<!--WHERE goods_id = #{id}-->
		<!--AND del_flag = #{DEL_FLAG_NORMAL}-->
	<!--</update>-->

	<update id="delSerItemCommodity">
		UPDATE ser_item_info_goods SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE item_id = #{id}
		AND del_flag = #{DEL_FLAG_NORMAL}
	</update>



	<select id="findListByItemId" resultType="SerItemCommodity">
		SELECT
		<include refid="serItemGoodsColumns"/>
		FROM ser_item_info_goods a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.item_id= #{id}
		</where>
	</select>

	<sql id="serItemGoodsColumns">
		a.id AS "id",
		a.item_id AS "itemId",
		a.name AS "name",
		a.unit AS "unit",
		a.type AS "type",
		a.price AS "price",
		a.convert_hours AS "convertHours",
		a.min_purchase AS "minPurchase",
		a.start_per_num AS startPerNum,
a.capping_per_num AS cappingPerNum
	</sql>
	<resultMap type="SerItemCommodity" id="SerItemGoodsResultMap">
		<id column="id" property="id"/>
		<result column="item_id" property="itemId"/>
		<result column="name" property="name"/>
		<result column="unit" property="unit"/>
		<result column="type" property="type"/>
		<result column="price" property="price"/>
		<result column="convert_hours" property="convertHours"/>
		<result column="min_purchase" property="minPurchase"/>
		<!-- 派人数量 -->
		<!--<association property="persons" column="{reqId=id}" select="selectPersonsById"></association>-->
	</resultMap>
	<!--<select id="selectPersonsById" parameterType="java.util.Map" resultType="SerItemCommodityPersons">-->
		<!--select id,critical,sort,quantity from ser_item_info_goods_persons-->
		<!--where goods_id=#{reqId}-->
		<!--and del_flag = '0'-->
	<!--</select>-->
</mapper>