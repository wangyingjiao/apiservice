<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.service.dao.item.SerItemCommodityDao">
    
	<sql id="serItemCommodityColumns">
		a.id AS "id",
		a.item_id AS "itemId",
		a.name AS "name",
		a.unit AS "unit",
		a.type AS "type",
		a.price AS "price",
		a.convert_hours AS "convertHours",
		a.min_purchase AS "minPurchase",
		a.start_per_num AS "startPerNum",
		a.capping_per_num AS "cappingPerNum"
		<!--a.joint_goods_code AS "jointGoodsCode"-->
	</sql>
	
	<sql id="serItemCommodityJoins">
	</sql>
    
	<select id="get" resultType="SerItemCommodity">
		SELECT 
			<include refid="serItemCommodityColumns"/>
		FROM ser_item_info_goods a
		<include refid="serItemCommodityJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="SerItemCommodity">
		SELECT 
			<include refid="serItemCommodityColumns"/>
		FROM ser_item_info_goods a
		<include refid="serItemCommodityJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE concat('%',#{name},'%')
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="SerItemCommodity">
		SELECT 
			<include refid="serItemCommodityColumns"/>
		FROM ser_item_info_goods a
		<include refid="serItemCommodityJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO ser_item_info_goods(
			id,
			sort_id,
			item_id,
			name,
			unit,
			type,
			price,
			convert_hours,
			min_purchase,
			start_per_num,
			capping_per_num,
			<!--joint_goods_code,-->
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{sortId},
			#{itemId},
			#{name},
			#{unit},
			#{type},
			#{price},
			#{convertHours},
			#{minPurchase},
			#{startPerNum},
			#{cappingPerNum},
			<!--#{jointGoodsCode},-->
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE ser_item_info_goods SET 	
			<if test="name != null and name != ''">
				name = #{name},
			</if>
			<if test="unit != null and unit != ''">
				unit = #{unit},
			</if>
			<if test="type != null and type != ''">
				type = #{type},
			</if>
			<if test="price != null and price != ''">
				price = #{price},
			</if>
			<if test="convertHours != null and convertHours != ''">
				convert_hours = #{convertHours},
			</if>
			<if test="minPurchase != null and minPurchase != ''">
				min_purchase = #{minPurchase},
			</if>
			<if test="startPerNum != null and startPerNum != ''">
				start_per_num = #{startPerNum},
			</if>
			<if test="cappingPerNum != null and cappingPerNum != ''">
				capping_per_num = #{cappingPerNum},
			</if>
			<!--<if test="jointGoodsCode != null and jointGoodsCode != ''">
				joint_goods_code = #{jointGoodsCode},
			</if>-->
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>

	<update id="updateJointGoodsCode">
		UPDATE ser_item_info_goods SET
		<!--joint_goods_code = #{jointGoodsCode},-->
		update_by = #{updateBy.id},
		update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE ser_item_info_goods SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<select id="getSerItemCommodityByItem" resultType="SerItemCommodity">
		SELECT id
		FROM ser_item_info_goods
		WHERE item_id = #{id}
		AND del_flag = #{DEL_FLAG_NORMAL}
	</select>

	<update id="delSerItemCommodity">
		UPDATE ser_item_info_goods SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE item_id = #{id}
		AND del_flag = #{DEL_FLAG_NORMAL}
	</update>

	<select id="findListByItemId" resultType="SerItemCommodity">
		SELECT
		<include refid="serItemGoodsColumns"/>
		FROM ser_item_info_goods a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.item_id= #{id}
		</where>
	</select>

	<sql id="serItemGoodsColumns">
		a.id AS "id",
		a.item_id AS "itemId",
		a.name AS "name",
		a.unit AS "unit",
		a.type AS "type",
		a.price AS "price",
		a.convert_hours AS "convertHours",
		a.min_purchase AS "minPurchase",
		a.start_per_num AS startPerNum,
		a.capping_per_num AS cappingPerNum
		<!--a.joint_goods_code AS jointGoodsCode-->
	</sql>
	<resultMap type="SerItemCommodity" id="SerItemGoodsResultMap">
		<id column="id" property="id"/>
		<result column="item_id" property="itemId"/>
		<result column="name" property="name"/>
		<result column="unit" property="unit"/>
		<result column="type" property="type"/>
		<result column="price" property="price"/>
		<result column="convert_hours" property="convertHours"/>
		<result column="min_purchase" property="minPurchase"/>
	</resultMap>

	<select id="getEshopGoodsList" resultType="SerItemCommodityEshop">
		SELECT
			a.id,
			a.org_id AS orgId,
			a.eshop_code AS eshopCode,
			a.item_id AS itemId,
			a.goods_id AS goodsId,
			<!--a.joint_goods_code AS jointGoodsCode,-->
			a.joint_status AS jointStatus
			FROM ser_item_info_goods_eshop a
			WHERE a.goods_id = #{id}
	</select>

    <select id="getGoods" resultType="SerItemCommodity">
        SELECT
              id,
              name,
              sort_id AS sortId
              FROM ser_item_info_goods
              WHERE id = #{id}
              AND del_flag = #{DEL_FLAG_NORMAL}

    </select>

	<select id="getEshopGoods" resultType="SerItemCommodityEshop">
		SELECT
			b.name AS eshopName,
			a.joint_goods_code AS jointGoodsCode
			FROM ser_item_info_goods_eshop a LEFT JOIN basic_gasq_eshop b ON a.eshop_code = b.code
			WHERE a.goods_id = #{id}
	</select>

	<!--下拉列表 根据登录用户的机构id查询出对应E店名称-->
	<select id="getGoodsCode" resultType="BasicGasqEshop">
		SELECT
		a.id,
		a.name,
		a.code AS eshopCode
		FROM basic_gasq_eshop a
		LEFT JOIN basic_organization_eshop b on a.code=b.eshop_code
		WHERE b.org_id=#{orgId}
	</select>

	<!--根据id获取商品-E店信息-->
	<select id="getGoodEshop" resultType="SerItemCommodityEshop">
		SELECT
			id AS id,
			org_id AS orgId,
			eshop_code AS eshopCode,
			item_id AS itemId,
			goods_id AS goodsId,
			joint_goods_code AS jointGoodsCode,
			joint_status AS jointStatus,
			enabled_status AS enabledSatus
		FROM ser_item_info_goods_eshop
		WHERE id = #{id}
	</select>

	<!--修改SerItemCommodityEshop中的状态-->
	<update id="updateEshop">
		UPDATE ser_item_info_goods_eshop SET
		enabled_status = #{enabledSatus}
		WHERE id = #{id}
	</update>


	<!--根据E店id 分类 商品名 对接code 查询出对应E店下的商品信息  获取对接商品-->
	<select id="getGoodsList" resultType="SerItemCommodityEshop">
		SELECT
		b.id AS itemId,
		b.name AS itemName,
		c.id AS goodsId,
		d.id AS sortId,
		d.name AS sortName,
		CONCAT(c.id,'_',d.id) AS selfCode,
		a.id AS id,
		a.org_id AS orgId,
		a.eshop_code ASeshopCode,
		a.joint_goods_code AS jointGoodsCode,
		a.joint_status AS jointStatus
		FROM ser_item_info_goods_eshop a
		LEFT JOIN basic_gasq_eshop e on a.eshop_code=e.code
		LEFT JOIN ser_item_info b on a.item_id=b.id AND b.del_flag = #{DEL_FLAG_NORMAL}
		LEFT JOIN ser_item_info_goods c on a.goods_id=c.id AND c.del_flag = #{DEL_FLAG_NORMAL}
		LEFT JOIN ser_sort_info d on c.sort_id=d.id AND d.del_flag = #{DEL_FLAG_NORMAL}
		<where>
			e.code=#{eshopCode}
			AND a.enabled_status='yes'
			<if test="majorSort != null and majorSort != ''">
				AND d.major_sort=#{majorSort}
			</if>
			<if test="sortId != null and sortId != ''">
				AND d.id=#{sortId}
			</if>
			<if test="goodsName != null and goodsName != ''">
				AND c.name LIKE concat('%',#{goodsName},'%')
			</if>
			<if test="goodsId != null and goodsId != ''">
				AND c.id=#{goodsId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY c.create_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findCommodityList" resultType="SerItemCommodityEshop">
		SELECT
			i.name AS itemName,
			g.id,
			g.name AS goodsName,
            s.id AS sortId,
			s.name AS sortName,
			s.major_sort AS majorSort,
			g.price,
			g.unit
			FROM ser_item_info i RIGHT JOIN ser_item_info_goods g ON i.id = g.item_id AND i.del_flag = #{DEL_FLAG_NORMAL}
			LEFT JOIN ser_sort_info s ON g.sort_id = s.id AND s.del_flag = #{DEL_FLAG_NORMAL}
			WHERE g.del_flag = #{DEL_FLAG_NORMAL}
            <if test="majorSort != null and majorSort != ''">
                AND s.major_sort = #{majorSort}
            </if>
            <if test="sortId != null and sortId != ''">
                AND s.id = #{sortId}
            </if>
            <if test="goodsName != null and goodsName != ''">
                AND g.name LIKE concat('%',#{goodsName},'%')
            </if>
			AND g.id NOT  IN (SELECT goods_id FROM ser_item_info_goods_eshop WHERE eshop_code = #{eshopCode})
			ORDER BY g.create_date DESC
	</select>

	<select id="getEshop" resultType="int">
		SELECT COUNT(1) FROM basic_gasq_eshop WHERE code = #{eshopCode} AND status = 0 AND third_part = 'selfService'
	</select>
	<!--根据id 获取服务项目商品信息-->
	<select id="getSerItemCommodity" resultType="SerItemCommodity">
		SELECT
		<include refid="serItemCommodityColumns"/>
		FROM ser_item_info_goods a
		WHERE a.id = #{id}
	</select>

    <select id="getGoodsEshop" resultType="int">
        SELECT COUNT(1) FROM ser_item_info_goods_eshop WHERE goods_id = #{id} AND eshop_code = #{eshopCode}
    </select>

    <insert id="insertGoodsEshop">
        INSERT INTO ser_item_info_goods_eshop (
              id,
              org_id,
              eshop_code,
              item_id,
              goods_id,
              joint_status
        )VALUES (
              #{id},
              #{orgId},
              #{eshopCode},
              #{itemId},
              #{goodsId},
              #{jointStatus}
        )
    </insert>
</mapper>