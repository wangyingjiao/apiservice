<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.service.dao.sort.SerSortInfoDao">
    
	<sql id="serSortInfoColumns">
		a.id AS "id",
		a.org_id AS "orgId",
		a.major_sort AS "majorSort",
		a.name AS "name",
		a.all_city AS "allCity"
	</sql>
	<sql id="serSortInfoJoins">
	</sql>
    
	<select id="get" resultType="SerSortInfo">
		SELECT 
			<include refid="serSortInfoColumns"/>
		FROM ser_sort_info a
		<include refid="serSortInfoJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultMap="SerSortResultMap">
		SELECT
		<include refid="serSortCityNamesColumns"/>
		FROM ser_sort_info a
		<if test="cityCode != null and cityCode !=''">
			LEFT JOIN ser_city_scope b ON a.id = b.master_id AND b.del_flag = #{DEL_FLAG_NORMAL}
		</if>
		<include refid="serSortInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE concat('%',#{name},'%')
			</if>
			<if test="majorSort != null and majorSort !='' and majorSort !='all'.toString()">
				AND a.major_sort= #{majorSort}
			</if>
			<if test="cityCode != null and cityCode !=''">
				AND (b.city_code = #{cityCode} OR a.all_city = 'yes')
			</if>
			<!-- 数据范围过滤 -->
			${sqlMap.dsf}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<sql id="serSortCityNamesColumns">
		a.id AS "id",
		a.major_sort AS "majorSort",
		a.name AS "name",
		a.all_city AS "allCity"
	</sql>
	<resultMap type="SerSortInfo" id="SerSortResultMap">
		<id column="id" property="id"/>
		<result column="major_sort" property="majorSort"/>
		<result column="name" property="name"/>
		<result column="all_city" property="allCity"/>
		<!-- 定向城市 -->
		<association property="cityNames" column="{reqId=id}" select="selectCityNameById"></association>
		<association property="cityCodes" column="{reqId=id}" select="selectCityIdById"></association>
	</resultMap>
	<select id="selectCityNameById" parameterType="java.util.Map" resultType="string">
		select city_code as cityName from ser_city_scope
		where master_id=#{reqId}
		and del_flag = '0'
	</select>
	<select id="selectCityIdById" parameterType="java.util.Map" resultType="string">
		select city_code as cityCode from ser_city_scope
		where master_id=#{reqId}
		and del_flag = '0'
	</select>

	<!-- 验证服务分类名称是否重复 -->
	<select id="checkDataName" resultType="int">
		SELECT COUNT(*) FROM ser_sort_info
		WHERE name = #{name}
		AND  org_id = #{orgId}
		AND del_flag = #{DEL_FLAG_NORMAL}
	</select>
	<!-- 验证此分类下是否有服务项目 -->
	<select id="checkedSortItem" resultType="int">
		SELECT COUNT(*) FROM ser_item_info s
		WHERE s.sort_id = #{id}
		AND s.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	<!-- 检查定向城市是否设置服务项目 -->
	<select id="checkCityItem" resultType="int">
		SELECT COUNT(*) FROM ser_sort_info s
		INNER JOIN ser_item_info i on s.id=i.sort_id
		INNER JOIN ser_item_city ic on i.id=ic.item_id
		WHERE s.id = #{id}
		AND ic.city_id = #{cityId}
		AND i.del_flag = #{DEL_FLAG_NORMAL}
		AND ic.del_flag = #{DEL_FLAG_NORMAL}
	</select>

	<insert id="insert">
		INSERT INTO ser_sort_info(
			id,
			org_id,
			major_sort,
			name,
			all_city,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{orgId},
			#{majorSort},
			#{name},
			#{allCity},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE ser_sort_info SET
			<if test="majorSort != null and majorSort != ''">
				major_sort = #{majorSort},
			</if>
			<if test="name != null and name != ''">
				name = #{name},
			</if>
			<if test="allCity != null and allCity != ''">
				all_city = #{allCity},
			</if>
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE ser_sort_info SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
</mapper>