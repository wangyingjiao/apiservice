<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.service.dao.order.OrderGoodsDao">
    
	<sql id="orderGoodsColumns">
		a.id AS "id",
		a.order_id AS "orderId",
		a.sort_id AS "sortId",
		a.item_id AS "itemId",
		a.item_name AS "itemName",
		a.goods_id AS "goodsId",
		a.goods_name AS "goodsName",
		a.goods_num AS "goodsNum",
		a.goods_refund_num AS "goodsRefundNum",
		a.goods_type AS "goodsType",
		a.goods_unit AS "goodsUnit",
		a.pay_price AS "payPrice",
		a.origin_price AS "originPrice",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="orderGoodsJoins">
	</sql>
    
	<select id="get" resultType="OrderGoods">
		SELECT 
			<include refid="orderGoodsColumns"/>
		FROM order_goods a
		<include refid="orderGoodsJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="OrderGoods">
		SELECT 
			<include refid="orderGoodsColumns"/>
		FROM order_goods a
		<include refid="orderGoodsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="OrderGoods">
		SELECT 
			<include refid="orderGoodsColumns"/>
		FROM order_goods a
		<include refid="orderGoodsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO order_goods(
			id,
			order_id,
			sort_id,
			item_id,
			item_name,
			goods_id,
			goods_name,
			goods_num,
			goods_refund_num,
			goods_type,
			goods_unit,
			pay_price,
			origin_price,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{orderId},
			#{sortId},
			#{itemId},
			#{itemName},
			#{goodsId},
			#{goodsName},
			#{goodsNum},
			#{goodsRefundNum},
			#{goodsType},
			#{goodsUnit},
			#{payPrice},
			#{originPrice},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE order_goods SET
			<if test="orderId !=null and orderId != ''">order_id = #{orderId},</if>
			<if test="sortId !=null and sortId != ''">sort_id = #{sortId},</if>
			<if test="itemId !=null and itemId != ''">item_id = #{itemId},</if>
			<if test="itemName !=null and itemName != ''">item_name = #{itemName},</if>
			<if test="goodsId !=null and goodsId != ''">goods_id = #{goodsId},</if>
			<if test="goodsName !=null and goodsName != ''">goods_name = #{goodsName},</if>
			<if test="goodsNum !=null and goodsNum != ''">goods_num = #{goodsNum},</if>
		<if test="goodsRefundNum !=null and goodsRefundNum != ''">goods_refund_num = #{goodsRefundNum},</if>
		<if test="goodsType !=null and goodsType != ''">goods_type = #{goodsType},</if>
		<if test="goodsUnit !=null and goodsUnit != ''">goods_unit = #{goodsUnit},</if>
			<if test="payPrice !=null and payPrice != ''">pay_price = #{payPrice},</if>
		<if test="originPrice !=null and originPrice != ''">origin_price = #{originPrice},</if>
			<if test="updateBy.id !=null and updateBy.id != ''">update_by = #{updateBy.id},</if>
			<if test="updateDate !=null and updateDate != ''">update_date = #{updateDate}</if>
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE order_goods SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteById">
		DELETE FROM order_goods
		WHERE id = #{id}
	</update>

	<select id="findItemGoodsByGoodId" resultType="SerItemCommodity">
		SELECT
		a.id AS id,
		a.name AS name,
		a.price AS price,
		a.convert_hours AS convertHours,
		a.start_per_num AS startPerNum,
		a.capping_per_num AS cappingPerNum,
		a.type AS "type",
		a.unit AS unit,
		b.id AS itemId,
		b.name AS itemName,
		c.id AS sortId,
		c.name AS sortName,
		b.major_sort AS majorSort
		FROM ser_item_info_goods a
		LEFT JOIN ser_item_info b ON b.id = a.item_id
		LEFT JOIN ser_sort_info c on b.sort_id = c.id
		WHERE a.id = #{id}
	</select>
	<update id="deleteGoodsByOrderId">
		UPDATE order_goods SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE order_id = #{orderId}
	</update>

	<select id="findItemList" resultType="OrderDropdownInfo">
		SELECT
			a.id AS "id",a.name AS "name"
		from ser_item_info a
		WHERE
		a.org_id = #{orgId}
		AND LENGTH(a.sort_id) &gt; 3
		AND a.del_flag = '0'
		ORDER BY a.create_date DESC
	</select>

	<update id="updateRefundNumByOrderIdItemId">
		UPDATE order_goods SET
			goods_refund_num = goods_num
		WHERE order_id = #{orderId}
		AND item_id = #{itemId}
		AND goods_id = #{goodsId}
		AND del_flag = #{DEL_FLAG_NORMAL}
	</update>


	<!--app补单-->
	<sql id="serItemCommodityColumns">
		a.id AS "id",
		a.major_sort AS "majorSort",
		a.sort_id AS "sortId",
		a.name AS "name",
		a.picture AS "picture"
	</sql>
	<!--获取补单商品表 根据订单id获取多个sortId位数小于3的商品-->
	<select id="listItemGoods" resultMap="SerItemCommodityResultMap">
		SELECT
		<include refid="serItemCommodityColumns"/>
		,#{id} AS orderId
		FROM ser_item_info a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.org_id=#{orgId}
			AND LENGTH(a.sort_id) &lt; 3
		</where>
		ORDER BY a.create_date DESC
	</select>
	<!--app补单-->
	<resultMap type="SerItemInfo" id="SerItemCommodityResultMap">
		<id column="id" property="id"/>
		<result column="picture" property="picture"/>
		<result column="major_sort" property="majorSort"/>
		<result column="sort_id" property="sortId"/>
		<result column="name" property="name"/>
		<!-- 项目关联商品 -->
		<association property="commoditys" column="{reqId=id,orderId=orderId}" select="selectCommodityById"></association>
	</resultMap>
	<!--app补单-->
	<select id="selectCommodityById" parameterType="java.util.Map" resultType="SerItemCommodity">
		select
		g.id,g.name,g.unit,g.type,g.price,g.min_purchase AS minPurchase,
		(case when o.id IS null then 'false' else 'true' END ) AS orderUseGoods,o.goods_num AS orderGoodsNum
		from ser_item_info_goods g
		LEFT JOIN order_goods o on g.id = o.goods_id AND o.del_flag = '0'
		AND o.order_id = #{orderId}
		where g.item_id=#{reqId}
		and g.del_flag = '0'
	</select>

	<!--根据订单id查询所有的订单商品表中分类id小于3的商品集合-->
	<select id="getbyOrderId" resultType="OrderGoods">
		SELECT
		<include refid="orderGoodsColumns"/>
		FROM order_goods a
		<include refid="orderGoodsJoins"/>
		WHERE a.order_id = #{id}
		AND a.del_flag='0'
		AND LENGTH(a.sort_id) &lt; 3
	</select>
</mapper>