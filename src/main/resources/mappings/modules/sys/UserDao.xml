<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.sys.dao.UserDao">

    <!-- <resultMap id="userResult" type="User">
        <id property="id" column="id" />
        <result property="company.id" column="company.id" />
        <result property="organization.id" column="organization.id" />
        <result property="loginName" column="login_name" />
        <result property="password" column="password" />
        <result property="no" column="no" />
        <result property="name" column="name" />
        <result property="email" column="email" />
        <result property="phone" column="phone" />
        <result property="mobile" column="mobile" />
        <result property="userType" column="user_type" />
        <result property="loginIp" column="login_ip" />
        <result property="loginDate" column="login_date" />
        <result property="remarks" column="remarks" />
        <result property="loginFlag" column="loginFlag" />
        <result property="photo" column="photo" />
        <result property="createBy.id" column="createBy.id" />
        <result property="createDate" column="create_date" />
        <result property="updateBy.id" column="updateBy.id" />
        <result property="updateDate" column="update_date" />
        <result property="company.name" column="company.name" />
        <result property="company.parentId" column="company.parentId" />
        <result property="company.parentIds" column="company.parentIds" />
        <result property="company.area.id" column="company.area.id" />
        <result property="company.area.name" column="company.area.name" />
        <result property="company.area.parentId" column="company.area.parentId" />
        <result property="company.area.parentIds" column="company.area.parentIds" />
        <result property="company.primaryPerson.id" column="company.primaryPerson.id" />
        <result property="company.primaryPerson.name" column="company.primaryPerson.name" />
        <result property="company.deputyPerson.id" column="company.deputyPerson.id" />
        <result property="company.deputyPerson.name" column="company.deputyPerson.name" />
        <result property="organization.name" column="organization.name" />
        <result property="organization.parentId" column="organization.parentId" />
        <result property="organization.parentIds" column="organization.parentIds" />
        <result property="organization.area.id" column="organization.area.id" />
        <result property="organization.area.name" column="organization.area.name" />
        <result property="organization.area.parentId" column="organization.area.parentId" />
        <result property="organization.area.parentIds" column="organization.area.parentIds" />
        <result property="organization.primaryPerson.id" column="organization.primaryPerson.id" />
        <result property="organization.primaryPerson.name" column="organization.primaryPerson.name" />
        <result property="organization.deputyPerson.id" column="organization.deputyPerson.id" />
        <result property="organization.deputyPerson.name" column="organization.deputyPerson.name" />
        <collection property="roleList" ofType="Role">
            <id property="id" column="roleList.id" />
            <result property="organization.id" column="roleList.organization.id" />
            <result property="name" column="roleList.name" />
            <result property="enname" column="roleList.enname" />
            <result property="roleType" column="roleList.roleType" />
            <result property="dataScope" column="roleList.dataScope" />
            <collection property="officeList" ofType="Office">
                <id property="id" column="roleList.officeList.id" />
            </collection>
        </collection>
    </resultMap> -->

    <sql id="userColumns">
        a.id,
        a.login_name,
        a.password,
        a.no,
        a.name,
        a.email,
        a.phone,
        a.mobile,
        a.useable,
        a.user_type,
        a.login_ip,
        a.login_date,
        a.remarks,
        a.login_flag,
        a.photo,
        a.create_by AS "createBy.id",
        a.create_date,
        a.update_by AS "updateBy.id",
        a.update_date,
        a.del_flag,
		a.type,
        org.id as "organization.id",
        org.name as "organization.name",

        ss.id AS "station.id",
        ss.name AS "station.name",

        sr.id as "role.id",
        sr.name as "role.name",
        sr.data_scope as "role.dataScope"
    </sql>

    <sql id="userJoins">
        LEFT JOIN basic_organization org ON a.office_id = org.id
        LEFT JOIN basic_service_station ss ON a.station_id = ss.id
        LEFT JOIN sys_user_role sur ON sur.user_id = a.id
        LEFT JOIN sys_role sr ON sur.role_id = sr.id
        <!--
            LEFT JOIN sys_user_role ur ON ur.user_id = a.id
            LEFT JOIN sys_role r ON r.id = ur.role_id -->
    </sql>

    <!-- 根据编号获得用户 -->
    <select id="get" resultType="User">
        SELECT
        <include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
        FROM sys_user a
        <include refid="userJoins"/><!--
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
        WHERE a.id = #{id}
    </select>

    <!-- 根据手机查询用户 -->
    <select id="getByMobile" resultType="User" parameterType="User">
        SELECT
        <include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
        FROM sys_user a
        <include refid="userJoins"/><!--
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
        WHERE a.mobile = #{mobile} AND a.del_flag = #{DEL_FLAG_NORMAL} AND a.useable = '1'
    </select>

    <!-- 根据登录名查询用户 -->
    <select id="getByLoginName" resultType="User" parameterType="User">
        SELECT
        <include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
        FROM sys_user a
        <include refid="userJoins"/><!--
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
        WHERE a.login_name = #{loginName} AND a.del_flag = #{DEL_FLAG_NORMAL} AND a.useable = '1'
    </select>

    <!-- 分页查询用户信息 -->
    <select id="findList" resultType="User">
        SELECT
        <include refid="userColumns"/>

        FROM sys_user a
        <include refid="userJoins"/>

        WHERE a.del_flag = #{DEL_FLAG_NORMAL}
        <!-- AND sr.data_scope  &lt;= CAST(#{currentUser.role.dataScope} AS SIGNED)-->

       <!--  <if test="organization != null and organization.id != null and organization.id != ''">
            AND (o.id = #{organization.id}
        </if> -->
        <!-- 如果不是超级管理员，则不显示超级管理员用户 -->
        <if test="!currentUser.admin">
            AND a.id != '1'
        </if>
        <if test="mobile != null and mobile != ''">
            AND a.mobile LIKE concat("%",#{mobile},"%")
        </if>
        <if test="name != null and name != ''">
            AND a.name LIKE concat("%",#{name},"%")
        </if>
        <if test="roleName != null and roleName != ''">
            AND sr.name LIKE concat("%",#{roleName},"%")
        </if>
        <if test="stationId != null and stationId != ''">
            AND ss.id = #{stationId}
        </if>
        <if test="orgId != null and orgId != ''">
            AND a.office_id = #{orgId}
        </if>
        <!-- 数据范围过滤 -->
        ${sqlMap.dsf}
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.create_date desc
            </otherwise>
        </choose>
    </select>

    <!-- 根据OfficeId获取用户（树查询用户时用） -->
    <select id="findUserByOfficeId" resultType="User" useCache="true">
		SELECT
			a.id, a.name, a.login_name
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.office_id = #{organization.id}
		ORDER BY a.name
	</select>

    <!-- 查询全部用户 -->
    <select id="findAllList" resultType="User">
        SELECT
        <include refid="userColumns"/>
        FROM sys_user a
        <include refid="userJoins"/>
        WHERE a.del_flag = #{DEL_FLAG_NORMAL}
        ORDER BY c.code, o.code, a.name
    </select>

    <!-- 查询全部用户数目 -->
    <select id="findAllCount" resultType="long">
		SELECT
			COUNT(1)
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
    <select id="findUserByRole" resultType="User">
        SELECT * FROM sys_user a
        JOIN sys_user_role sur ON a.id = sur.user_id
        WHERE  a.del_flag = #{DEL_FLAG_NORMAL} and sur.role_id = #{id}

    </select>

    <!-- 插入用户 -->
    <insert id="insert">
		INSERT INTO sys_user(
			id, 
            type,
			office_id,
			station_id,
			login_name, 
			password, 
			no, 
			name, 
			email, 
			phone, 
			mobile,
			useable,
			user_type, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			login_flag, 
			photo, 
			del_flag
		) VALUES (
			#{id}, 
            #{type},
			#{organization.id},
			#{station.id},
			#{loginName}, 
			#{password}, 
			#{no}, 
			#{name}, 
			#{email}, 
			#{phone}, 
			#{mobile},
			#{useable},
			#{userType}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{loginFlag}, 
			#{photo}, 
			#{delFlag}
		)
	</insert>

    <!-- 更新用户 -->
    <update id="update">
        UPDATE sys_user
        <set>
            <if test="organization.id != null">office_id = #{organization.id},</if>
            <if test="station.id != null">station_id = #{station.id},</if>
            <if test="loginName != null">login_name = #{loginName},</if>
            <if test="password != null">password = #{password},</if>
            <if test="no != null">no = #{no},</if>
            <if test="name != null">name = #{name} ,</if>
            <if test="email != null">email = #{email} ,</if>
            <if test="phone != null">phone = #{phone} ,</if>
            <if test="mobile != null">mobile = #{mobile} ,</if>
            <if test="useable != null">useable = #{useable} ,</if>
            <if test="userType != null">user_type = #{userType} ,</if>
            <if test="updateBy.id != null">update_by = #{updateBy.id} ,</if>
            <if test="updateDate != null">update_date = #{updateDate} ,</if>
            <if test="remarks != null">remarks = #{remarks} ,</if>
            <if test="loginFlag != null">login_flag = #{loginFlag} ,</if>
            <if test="photo != null">photo = #{photo},</if>
            <if test="type != null">type = #{type},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除用户和角色关联表数据 -->
    <delete id="deleteUserRole">
		DELETE FROM sys_user_role WHERE user_id = #{id}
	</delete>

    <!-- 插入用户和角色关联表数据 -->
    <insert id="insertUserRole">
        INSERT INTO sys_user_role(user_id, role_id)
        <foreach collection="roleList" item="role" separator=" union all ">
            SELECT #{id}, #{role.id}
            <if test="dbName != 'mssql'">
                FROM dual
            </if>
        </foreach>
    </insert>

    <!-- 更新用户信息  -->
    <update id="updateUserInfo">
		UPDATE sys_user SET 
			email = #{email}, 
			phone = #{phone}, 
			mobile = #{mobile},
			useable = #{useable},
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			photo = #{photo}
		WHERE id = #{id}
	</update>

    <!-- 更新用户密码 -->
    <update id="updatePasswordById">
		UPDATE sys_user SET 
			password = #{password} 
		WHERE id = #{id}
	</update>

    <!-- 更新登录信息，如登录IP、登录时间 -->
    <update id="updateLoginInfo">
		UPDATE sys_user SET 
			login_ip = #{loginIp}, 
			login_Date = #{loginDate} 
		WHERE id = #{id}
	</update>

    <!-- 逻辑删除用户 -->
    <update id="delete">
		UPDATE sys_user SET
        <if test="updateBy.id !=null and updateBy.id != ''">update_by = #{updateBy.id},</if>
        <if test="updateDate !=null and updateDate != ''">update_date = #{updateDate},</if>
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

</mapper>