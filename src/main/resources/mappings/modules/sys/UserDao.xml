<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.sys.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.thinkgem.jeesite.modules.sys.entity.User">
        <id column="id" property="id" />
        <result column="org_id" property="orgId" />
        <result column="station_id" property="stationId" />
        <result column="role_id" property="roleId" />
        <result column="name" property="name" />
        <result column="phone" property="phone" />
        <result column="password" property="password" />
        <result column="is_useable" property="isUseable" />
        <result column="login_ip" property="loginIp" />
        <result column="login_date" property="loginDate" />
        <result column="create_by" property="createBy" />
        <result column="create_date" property="createDate" />
        <result column="update_by" property="updateBy" />
        <result column="update_date" property="updateDate" />
        <result column="del_flag" property="delFlag" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, org_id AS orgId, station_id AS stationId, role_id AS roleId, name, phone, password, is_useable AS isUseable, login_ip AS loginIp, login_date AS loginDate, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, del_flag AS delFlag
    </sql>

    <sql id="userColumns">
        a.id,
        a.company_id AS "company.id",
        a.office_id AS "office.id",
        a.login_name,
        a.password,
        a.no,
        a.name,
        a.email,
        a.phone,
        a.mobile,
        a.useable,
        a.user_type,
        a.login_ip,
        a.login_date,
        a.remarks,
        a.login_flag,
        a.photo,
        a.create_by AS "createBy.id",
        a.create_date,
        a.update_by AS "updateBy.id",
        a.update_date,
        a.del_flag,
        c.name AS "company.name",
        c.parent_id AS "company.parent.id",
        c.parent_ids AS "company.parentIds",
        ca.id AS "company.area.id",
        ca.name AS "company.area.name",
        ca.parent_id AS "company.area.parent.id",
        ca.parent_ids AS "company.area.parentIds",
        o.name AS "office.name",
        o.parent_id AS "office.parent.id",
        o.parent_ids AS "office.parentIds",
        ss.id AS "station.id",
        ss.name AS "station.name",
        ss.id as "stationId",
        ss.name as "stationName",
        oa.id AS "office.area.id",
        oa.name AS "office.area.name",
        oa.parent_id AS "office.area.parent.id",
        oa.parent_ids AS "office.area.parentIds",
        cu.id AS "company.primaryPerson.id",
        cu.name AS "company.primaryPerson.name",
        cu2.id AS "company.deputyPerson.id",
        cu2.name AS "company.deputyPerson.name",
        ou.id AS "office.primaryPerson.id",
        ou.name AS "office.primaryPerson.name",
        ou2.id AS "office.deputyPerson.id",
        ou2.name AS "office.deputyPerson.name"<!-- ,
        r.id AS "roleList.id",
        r.office_id AS "roleList.office.id",
        r.name AS "roleList.name",
        r.enname AS "roleList.enname",
        r.role_type AS "roleList.roleType",
        r.data_scope AS "roleList.dataScope" -->
    </sql>

    <sql id="userJoins">
        LEFT JOIN sys_office c ON c.id = a.company_id
        LEFT JOIN service_station ss ON ss.id = a.station_id
        LEFT JOIN sys_area ca ON ca.id = c.area_id
        LEFT JOIN sys_office o ON o.id = a.office_id
        LEFT JOIN sys_area oa ON oa.id = o.area_id
        LEFT JOIN sys_user cu ON cu.id = c.primary_person
        LEFT JOIN sys_user cu2 ON cu2.id = c.deputy_person
        LEFT JOIN sys_user ou ON ou.id = o.primary_person
        LEFT JOIN sys_user ou2 ON ou2.id = o.deputy_person<!--
		LEFT JOIN sys_user_role ur ON ur.user_id = a.id
        LEFT JOIN sys_role r ON r.id = ur.role_id -->
    </sql>

    <!-- 根据编号获得用户 -->
    <select id="get" resultType="User">
        SELECT
        <include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
        FROM sys_user a
        <include refid="userJoins"/><!--
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
        WHERE a.id = #{id}
    </select>

    <!-- 根据登录名查询用户 -->
    <select id="getByLoginName" resultType="User" parameterType="User">
        SELECT
        <include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
        FROM sys_user a
        <include refid="userJoins"/><!--
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
        WHERE a.phone = #{phone} AND a.del_flag = #{DEL_FLAG_NORMAL}

    </select>

    <!-- 分页查询用户信息 -->
    <select id="findList" resultType="User">
        SELECT
        <include refid="userColumns"/>
        ,sr.name AS "roleName"
        ,sr.id as "roleId"
        FROM sys_user a
        <include refid="userJoins"/>
        <if test="role != null and role.id != null and role.id != ''">
            JOIN sys_user_role ur ON ur.user_id = a.id AND ur.role_id = #{role.id}
        </if>

        JOIN sys_user_role sur ON a.id = sur.user_id
        JOIN sys_role sr ON sur.role_id = sr.id

        WHERE a.del_flag = #{DEL_FLAG_NORMAL}

        <if test="office != null and office.id != null and office.id != ''">
            AND (o.id = #{office.id} OR o.parent_ids LIKE CONCAT('%,', #{office.id}, ',%'))
        </if>
        <!-- 如果不是超级管理员，则不显示超级管理员用户 -->
        <if test="!currentUser.admin">
            AND a.id != '1'
        </if>
        <if test="mobile != null and mobile != ''">
            AND a.mobile LIKE concat("%",#{mobile},"%")
        </if>
        <if test="roleName != null and roleName != ''">
            AND sr.name LIKE concat("%",#{roleName},"%")
        </if>
        <if test="stationId != null and stationId != ''">
            AND ss.id = #{stationId}
        </if>
        <!-- 数据范围过滤 -->
        ${sqlMap.dsf}
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.create_date desc
            </otherwise>
        </choose>
    </select>

    <!-- 根据OfficeId获取用户（树查询用户时用） -->
    <select id="findUserByOfficeId" resultType="User" useCache="true">
		SELECT
			a.id, a.name, a.login_name
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.office_id = #{office.id}
		ORDER BY a.name
	</select>

    <!-- 查询全部用户 -->
    <select id="findAllList" resultType="User">
        SELECT
        <include refid="userColumns"/>
        FROM sys_user a
        <include refid="userJoins"/>
        WHERE a.del_flag = #{DEL_FLAG_NORMAL}
        ORDER BY c.code, o.code, a.name
    </select>

    <!-- 查询全部用户数目 -->
    <select id="findAllCount" resultType="long">
		SELECT
			COUNT(1)
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
    <select id="findUserByRole" resultType="User">
        SELECT * FROM sys_user a
        JOIN sys_user_role sur ON a.id = sur.user_id
        WHERE  sur.role_id = #{id}

    </select>
    <select id="getByPhone" resultType="User">





    </select>

    <!-- 插入用户 -->
    <insert id="insert">
		INSERT INTO sys_user(
			id, 
			company_id, 
			office_id,
			station_id,
			login_name, 
			password, 
			no, 
			name, 
			email, 
			phone, 
			mobile,
			useable,
			user_type, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			login_flag, 
			photo, 
			del_flag
		) VALUES (
			#{id}, 
			#{company.id}, 
			#{office.id},
			#{station.id},
			#{loginName}, 
			#{password}, 
			#{no}, 
			#{name}, 
			#{email}, 
			#{phone}, 
			#{mobile},
			#{useable},
			#{userType}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{loginFlag}, 
			#{photo}, 
			#{delFlag}
		)
	</insert>

    <!-- 更新用户 -->
    <update id="update">
        UPDATE sys_user
        <set>
            <if test="company.id != null">company_id = #{company.id},</if>
            <if test="office.id != null">office_id = #{office.id},</if>
            <if test="station.id != null">station_id = #{station.id},</if>
            <if test="loginName != null">login_name = #{loginName},</if>
            <if test="password != null">password = #{password},</if>
            <if test="no != null">no = #{no},</if>
            <if test="name != null">name = #{name} ,</if>
            <if test="email != null">email = #{email} ,</if>
            <if test="phone != null">phone = #{phone} ,</if>
            <if test="mobile != null">mobile = #{mobile} ,</if>
            <if test="useable != null">useable = #{useable} ,</if>
            <if test="userType != null">user_type = #{userType} ,</if>
            <if test="updateBy.id != null">update_by = #{updateBy.id} ,</if>
            <if test="updateDate != null">update_date = #{updateDate} ,</if>
            <if test="remarks != null">remarks = #{remarks} ,</if>
            <if test="loginFlag != null">login_flag = #{loginFlag} ,</if>
            <if test="photo != null">photo = #{photo},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除用户和角色关联表数据 -->
    <delete id="deleteUserRole">
		DELETE FROM sys_user_role WHERE user_id = #{id}
	</delete>

    <!-- 插入用户和角色关联表数据 -->
    <insert id="insertUserRole">
        INSERT INTO sys_user_role(user_id, role_id)
        <foreach collection="roleList" item="role" separator=" union all ">
            SELECT #{id}, #{role.id}
            <if test="dbName != 'mssql'">
                FROM dual
            </if>
        </foreach>
    </insert>

    <!-- 更新用户信息  -->
    <update id="updateUserInfo">
		UPDATE sys_user SET 
			email = #{email}, 
			phone = #{phone}, 
			mobile = #{mobile},
			useable = #{useable},
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			photo = #{photo}
		WHERE id = #{id}
	</update>

    <!-- 更新用户密码 -->
    <update id="updatePasswordById">
		UPDATE sys_user SET 
			password = #{password} 
		WHERE id = #{id}
	</update>

    <!-- 更新登录信息，如登录IP、登录时间 -->
    <update id="updateLoginInfo">
		UPDATE sys_user SET 
			login_ip = #{loginIp}, 
			login_Date = #{loginDate} 
		WHERE id = #{id}
	</update>

    <!-- 逻辑删除用户 -->
    <update id="delete">
		UPDATE sys_user SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

</mapper>